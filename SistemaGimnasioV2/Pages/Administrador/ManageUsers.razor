@page "/Administrador/ManageUsers"
@using Microsoft.EntityFrameworkCore
@using SistemaGimnasioV2.Data
@using SistemaGimnasioV2.Models
@inject GymDbContext DbContext

<h3>Gestión de Usuarios</h3>

@if (isLoading)
{
    <div class="alert alert-info">Cargando usuarios...</div>
}
else if (users != null && users.Count > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Email</th>
                <th>Rol</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <td>
                        <!-- Enlace para Editar Usuario -->
                        <a href="/Administrador/EditUser/@user.Id" class="btn btn-warning btn-sm">
                            Editar
                        </a>

                        <!-- Enlace para Eliminar Usuario -->
                        <a href="/Administrador/DeleteUser/@user.Id" class="btn btn-danger btn-sm">
                            Eliminar
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info">No se encontraron usuarios registrados.</div>
}

<div class="mt-3">
    <!-- Enlace para Agregar Usuario -->
    <a href="/Administrador/AddUser" class="btn btn-primary">Agregar Usuario</a>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private List<User> users = new();
    private bool isLoading = true;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsersAsync();
    }

    private async Task LoadUsersAsync()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            users = await DbContext.Users.ToListAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "Error al cargar los usuarios. Intente nuevamente.";
            Console.WriteLine($"Error al cargar usuarios: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}

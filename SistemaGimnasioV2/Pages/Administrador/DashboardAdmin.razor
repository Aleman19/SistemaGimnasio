@page "/Administrador/DashboardAdmin"
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject HttpClient Http
@using SistemaGimnasioV2.Models

<div class="container mt-4">
    <!-- Mensaje de Bienvenida -->
    <div class="row">
        <div class="col text-center mb-4">
            <h3>Panel de Control del Administrador</h3>
            <p class="text-muted">@message</p>
        </div>
    </div>

    <!-- Sección de Equipos Próximos a Vencer -->
    @if (expiringItems != null && expiringItems.Any())
    {
        <div class="alert alert-warning">
            <h5>⚠️ Equipos Próximos a Vencer:</h5>
            <ul>
                @foreach (var item in expiringItems)
                {
                    <li>@item.Name - Compra: @item.PurchaseDate.ToString("dd/MM/yyyy")</li>
                }
            </ul>
        </div>
    }
    else
    {
        <div class="alert alert-success">
            No hay equipos próximos a vencer.
        </div>
    }

    <!-- Mensaje de Error Debajo de la Alerta -->
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">
            <h5>❌ Error</h5>
            <p>@errorMessage</p>
        </div>
    }

    <!-- Botones de Gestión -->
    <div class="row g-3 mt-3">
        <!-- Enlace Gestionar Usuarios -->
        <div class="col-md-3">
            <a href="/Administrador/ManageUsers" class="btn btn-primary w-100">
                <i class="bi bi-people"></i> Gestionar Usuarios
            </a>
        </div>

        <!-- Enlace Gestionar Inventario -->
        <div class="col-md-3">
            <a href="/Administrador/ManageInventory" class="btn btn-success w-100">
                <i class="bi bi-box-seam"></i> Gestionar Inventario
            </a>
        </div>

        <!-- Enlace Gestionar Horarios -->
        <div class="col-md-3">
            <a href="/Administrador/ManageSchedules" class="btn btn-warning w-100">
                <i class="bi bi-calendar"></i> Gestionar Horarios
            </a>
        </div>

        <!-- Enlace Ver Reportes -->
        <div class="col-md-3">
            <a href="/Administrador/Reports" class="btn btn-info w-100">
                <i class="bi bi-bar-chart"></i> Ver Reportes
            </a>
        </div>
    </div>
</div>

@code {
    private string message = string.Empty;
    private string errorMessage = string.Empty; // Nuevo mensaje de error
    private List<InventoryItem> expiringItems = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            message = $"Bienvenido, {user.Identity.Name}";
            await LoadExpiringInventory();
        }
        else
        {
            NavigationManager.NavigateTo("/login");
        }
    }

    private async Task LoadExpiringInventory()
    {
        try
        {
            var response = await Http.GetAsync("api/Inventory/Expiring");

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<List<InventoryItem>>();
                expiringItems = result ?? new List<InventoryItem>();
            }
            else
            {
                errorMessage = $"Error al cargar alertas del inventario. Código: {response.StatusCode}";
            }
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"Error de conexión: {httpEx.Message}");
            errorMessage = "No se pudo conectar con el servidor.";
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error general: {ex.Message}");
            errorMessage = "Ocurrió un error inesperado al cargar las alertas de inventario.";
        }
    }

    // Modelo local para los ítems de inventario
    private class InventoryItem
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public DateTime PurchaseDate { get; set; }
        public int LifeSpanMonths { get; set; }
    }
}

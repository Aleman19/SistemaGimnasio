@page "/login"
@using GestiónGimnasioMVC.Data
@using GestiónGimnasioMVC.Model
@using Microsoft.AspNetCore.Identity.Data
@inject HttpClient Http
@inject GymDbContext DbContext
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Login</h3>

<EditForm Model="@login" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <!-- Updated binding syntax -->
        <InputText id="email" @bind-Value="login.Email" />
    </div>

    <div>
        <label for="password">Password:</label>
        <!-- Updated binding syntax -->
        <InputText id="password" @bind-Value="login.Password" type="password" />
    </div>

    <div>
        <button type="submit">Login</button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
</EditForm>

@code {
    private LoginRequest login = new LoginRequest();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Login", login);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<dynamic>();
                var role = result?.Role;
                if (role == "Administrador")
                    NavigationManager.NavigateTo("/admin/dashboard");
                else if (role == "Entrenador")
                    NavigationManager.NavigateTo("/trainer/dashboard");
                else if (role == "Cliente")
                    NavigationManager.NavigateTo("/client/dashboard");
            }
            else
            {
                errorMessage = "Credenciales inválidas";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
